apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "engine.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "engine.name" . }}
    helm.sh/chart: {{ include "engine.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "engine.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "engine.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        qix-engine: ""
    {{- with .Values.image.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      terminationGracePeriodSeconds: 600
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.image.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.image.env }}
          env:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          args: [
            "-S", "AcceptEULA={{ .Values.image.args.AcceptEULA }}",
            "-S", "LicenseServiceUrl=http://license-service:9200",
            "-S", "DocumentDirectory={{ .Values.image.args.DocumentDirectory }}",
            "-S", "EnableABAC=1",
            "-S", "SystemAllowRulePath=/rules/read_engine_rules.txt"
          ]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
      {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "/engine-prestop-hook/engine-prestop-hook.sh"]
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: volume-mount-owner
          image: "alpine:3.5" 
          command: ["sh", "-c", "chown -R 65534:65534 /core"]
          volumeMounts:
            - name: app-nfs
              mountPath: /core
      imagePullSecrets:
      - name: dockerhub
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}